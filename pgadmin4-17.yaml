# pgAdmin4 17.0 is intended to support PostgreSQL 17.
# https://github.com/pgadmin-org/pgadmin4/blob/28eb2c0b4bcb229763cb0e160953e15ef9921dd4/Dockerfile#L119-L155
package:
  name: pgadmin4-17
  version: "8.14"
  epoch: 0
  description: |
    pgAdmin is the most popular and feature rich Open Source administration and
    development platform for PostgreSQL, the most advanced Open Source database in the world.
  copyright:
    - license: PostgreSQL License
  dependencies:
    provides:
      - pgadmin4=${{package.full-version}}
    runtime:
      - python3
      - postgresql-17-client
      - libpq-17
      - nodejs
      - npm

environment:
  contents:
    packages:
      # Build dependencies
      - autoconf
      - automake
      - bash
      - build-base
      - busybox
      - gcc
      - glibc-locale-en
      - krb5-dev
      - libedit
      - libffi-dev
      - libjpeg-turbo-dev # For image processing
      - libldap
      - liblz4-1
      - libpng-dev # For optipng-bin
      - libpq-17
      - libxml2-dev
      - libxslt-dev
      - libzstd1
      - nasm
      - nodejs
      - npm
      - openssl-dev # For crypto operations
      - postgresql-17-dev
      - postgresql-contrib
      - py3-pip # Explicitly include pip
      - python3-dev
      - rust
      - shadow
      - sudo
      - tzdata
      - yarn
      - yasm # For mozjpeg
      - zlib-dev # For optipng-bin

var-transforms:
  - from: ${{package.version}}
    match: '\.'
    replace: "_"
    to: mangled-package-version

pipeline:
  - uses: git-checkout
    with:
      expected-commit: 9e58717321a434519875773707df78c020bcde40
      repository: https://github.com/pgadmin-org/pgadmin4
      tag: REL-${{vars.mangled-package-version}}

  - runs: |
      # Setup Python virtual environment
      python3 -m venv venv
      . venv/bin/activate

      # Upgrade basic tools
      pip install --upgrade pip setuptools wheel

      # Install Python dependencies
      pip install -r requirements.txt
      pip install --no-cache-dir sphinx sphinxcontrib-youtube

      # Build documentation
      make docs

      # Build Python package
      make pip

      # Build web assets
      cd web

      # Configure build environment
      export CPPFLAGS="-DPNG_ARM_NEON_OPT=0"
      export SHARP_IGNORE_GLOBAL_LIBVIPS=1
      export npm_config_build_from_source=true

      # Setup Yarn
      npm install -g corepack
      corepack enable
      yarn set version berry
      yarn set version 3

      # Configure Yarn
      yarn config set enableScripts true
      yarn config set nodeLinker node-modules

      # Install dependencies and build
      yarn install
      yarn run bundle

      # Create installation directory
      mkdir -p ${{targets.destdir}}/usr/local/pgadmin4
      cp -R . ${{targets.destdir}}/usr/local/pgadmin4

      # Additional setup from README
      mkdir -p ${{targets.destdir}}/var/lib/pgadmin
      mkdir -p ${{targets.destdir}}/var/log/pgadmin

      # Set permissions (adjust as needed)
      chown -R root:root ${{targets.destdir}}/usr/local/pgadmin4
      chmod 755 ${{targets.destdir}}/var/lib/pgadmin
      chmod 755 ${{targets.destdir}}/var/log/pgadmin

update:
  version-separator: _
  enabled: true
  github:
    identifier: pgadmin-org/pgadmin4
    strip-prefix: REL-
    tag-filter: REL_8
    use-tag: true
